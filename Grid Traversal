#pragma config(Sensor, S1,     sonarSensor,    sensorSONAR)
#pragma config(Sensor, S2,     lightSensor,    sensorLightActive)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/* Program that will cause the robot to move forward, with each movement
counting the lines it passes over. */

task main()
{
	nMotorPIDSpeedCtrl[motorB] = mtrSpeedReg;
	nMotorPIDSpeedCtrl[motorC] = mtrSpeedReg;

	nSyncedMotors = synchBC;

	//Set up motor encoder
	nMotorEncoder[motorB] = 0;

	//Go forwards one square
	while(nMotorEncoder[motorB] < 520)
	{
		nSyncedTurnRatio = 100;
		motor[motorB] = 25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Turn right
	while(nMotorEncoder[motorB] > -195)
	{
		nSyncedTurnRatio = -100;
		motor[motorB] = -25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Go forwards one square
	while(nMotorEncoder[motorB] < 520)
	{

		nSyncedTurnRatio = 100;
		motor[motorB] = 25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Turn right
	while(nMotorEncoder[motorB] > -195)
	{

		nSyncedTurnRatio = -100;
		motor[motorB] = -25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Go forwards one square
	while(nMotorEncoder[motorB] < 520)
	{

		nSyncedTurnRatio = 100;
		motor[motorB] = 25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Turn right
	while(nMotorEncoder[motorB] > -195)
	{

		nSyncedTurnRatio = -100;
		motor[motorB] = -25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Go forwards one square
	while(nMotorEncoder[motorB] < 520)
	{

		nSyncedTurnRatio = 100;
		motor[motorB] = 25;
	}//End while

	nMotorEncoder[motorB] = 0;

	//Turn right
	while(nMotorEncoder[motorB] > -195)
	{

		nSyncedTurnRatio = -100;
		motor[motorB] = -25;
	}//End while

	nMotorEncoder[motorB] = 0;


}//End main()
